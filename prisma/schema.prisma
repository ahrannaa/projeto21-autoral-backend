generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  companyid Int
  image     String
  createdAt DateTime  @default(now()) @db.Date
  company   company   @relation(fields: [companyid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service   service[]
}

model company {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime   @default(now()) @db.Date
  category  category[]
  service   service[]
}

model schedule {
  id          Int           @id @default(autoincrement())
  serviceId   Int
  date        String
  startTime   String
  endTime     String
  status      String
  createdAt   DateTime      @default(now()) @db.Date
  appointment appointment[]
  service     service       @relation(fields: [serviceId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model service {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  price      String
  categoryId Int
  companyId  Int
  createdAt  DateTime   @default(now()) @db.Date
  schedule   schedule[]
  category   category   @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  company    company    @relation(fields: [companyId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  password    String
  phone       String
  createdAt   DateTime      @default(now()) @db.Date
  appointment appointment[]
  session     session[]
}

model session {
  id        Int      @id @default(autoincrement())
  userid    Int
  token     String   @unique
  createdAt DateTime @default(now()) @db.Date
  user      user     @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model appointment {
  id         Int      @id @default(autoincrement())
  userid     Int
  scheduleid Int
  status     String
  createdAt  DateTime @default(now()) @db.Date
  schedule   schedule @relation(fields: [scheduleid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
